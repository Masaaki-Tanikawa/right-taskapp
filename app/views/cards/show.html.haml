.inner.is-card
  .board-back= link_to "＜ #{"B%03d:" % @board.id}#{ @board.title} に戻る", board_path(@board)
  .card
    .card-top
      .card-title
        %h2
          %span= "C%03d:" % @card.id
          = @card.title
      - if user_signed_in? && current_user == @card.user
        .card-actions
          .card-icon
            = image_tag 'actions.svg', alt: 'Actions Icon'
            .dropdown-content.mini
              = link_to '編集する', edit_board_card_path(@card)
              = link_to '削除する', board_card_path(@board, @card), data: { turbo_method: 'delete', turbo_confirm: '本当に削除してもよろしいですか？' }
    .card-status
      .card-progress
        %p= image_tag 'status.svg'
        %p= t("enums.card.status.#{@card.status}")
      .card-deadline
        %p= image_tag 'deadline.svg'
        %p= @card.deadline
    .card-text
      .card-description
        = @card.description
        .card-comment-date= l(@card.created_at, format: :long)
      .card-author
        %p= '担当者'
        .card-image
          = image_tag @card.user.avatar_image
        .card-name= @card.user.display_name

    .card-comment
      .card-comment-title
        %p= t('activerecord.attributes.card.comment_title')
        = sort_link @q, :created_at, '投稿日時', default_order: :desc, class:'filter-button'
      - @comments.each do |comment|
        - owner_comment = (comment.user_id == @card.user_id)
        .card-comment-content{ class: ("is-owner" if owner_comment) }
          .card-author
            .card-image
              = image_tag comment.user.avatar_image
            .card-name= comment.user.display_name
          .card-comment-text
            %p= comment.content
            .card-comment-date= l(comment.created_at, format: :long)
    :javascript
      document.addEventListener("turbo:load", function () {
        // クエリ削除（初回ロード時のみ）
        if (window.location.search.length > 0) {
          const url = new URL(window.location.href);
          url.search = "";
          history.replaceState(null, "", url);
        }
      });
      // ブラウザバック検出してリロード
      window.addEventListener("pageshow", function (event) {
        const navType = performance.getEntriesByType("navigation")[0]?.type;
        if (event.persisted || navType === "back_forward") {
          location.reload();
        }
      });
  - if user_signed_in?
    = link_to new_board_card_comment_path(@board, @card), class: 'create', data: { turbo: false } do
      .create-content ＋ 新しいコメントを追加